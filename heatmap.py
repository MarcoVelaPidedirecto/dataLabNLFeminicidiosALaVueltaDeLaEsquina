# -*- coding: utf-8 -*-
"""heatMap.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/13MMqAlqAMX71VdQdEw_60KpTUlOzQFHJ
"""

import geopandas as gpd
import numpy as np
import pandas as pd
import pandas
import folium
from folium.plugins import HeatMap


#Read personalized Excel file
df=pd.read_excel('Historial.xlsx')
df.rename(columns={'x':'longitud','y':'latitud'},inplace=True)

dfCoords=df.loc[:,['latitud','longitud']]
data = dfCoords.copy()
data['metric']=1

# extrayendo los valores de longitud y latitud a listas separadas
longs = list(data['longitud'])
lats = list(data['latitud'])
# calcular los valores medios de longitud y latitud
import statistics
meanLong = statistics.mean(longs)
meanLat = statistics.mean(lats)
# crear un objeto mapa base usando Map()
mapObj = folium.Map(location=[25.68311113135739, -100.31776690411596], zoom_start = 11)
# crear capa de mapa de calor

heatmap = HeatMap( list(zip(lats, longs, data["metric"])),
                   min_opacity=0.2,
                   radius=50, blur=50,
                   max_zoom=1)
# a√±adir capa de mapa de calor al mapa base
heatmap.add_to(mapObj)
#folium.raster_layers.TileLayer(tiles='Stamen Toner').add_to(mapObj) #Capa a blanco y negro
#folium.LayerControl().add_to(mapObj) #Toggle de control de capas

##### Guardar archivo html
fn='map.html'
mapObj.save(fn)



